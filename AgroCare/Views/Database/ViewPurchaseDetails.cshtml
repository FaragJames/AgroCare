@{
    Layout = "_DatabaseLayout";
}
@model List<PurchaseDto>
@{
    var purchasesId = Model.Select(p => p.Id).ToList();
}

<div class="recent_payments">
    <div class="title">
        <h2>Purchase Details</h2>
        <div class="action">
            <button onclick="addHeader()" data-bs-toggle="modal" data-bs-target="#Purchasedetails-edit">Add</button>
        </div>
    </div>
    <table>
        <tr>
            <th>Id</th>
            <th>Purchase Id</th>
            <th>Item</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Details</th>
            <th>Rented Status</th>
            <th></th>
        </tr>
        @{
            int i = 0;
        }
        @foreach (var purchase in Model)
        {
            foreach (var purchaseDetail in purchase.PurchaseDetails)
            {
                <tr id="tr@(i)">
                    <td data-key="Id">@purchaseDetail.Id</td>
                    <td data-key="PurchaseId">@purchase.Id</td>
                    <td data-key="Item">@purchaseDetail.Item</td>
                    <td data-key="Quantity">@purchaseDetail.Quantity</td>
                    <td data-key="Price">@purchaseDetail.Price</td>
                    <td data-key="Details">@(purchaseDetail.Details ?? "")</td>
                    <td data-key="IsRented">@purchaseDetail.IsRented.ToString()</td>
                    <td data-key="none">
                        <div class="icon">
                            <span onclick="fillEditInfo('tr@(i)')" class="material-symbols-outlined" data-bs-toggle="modal" data-bs-target="#Purchasedetails-edit">surgical</span>
                            <span class="material-symbols-outlined" onclick="deleteRecord('tr@(i)')">delete</span>
                        </div>
                    </td>
                </tr>
                i++;
            }
        }
    </table>
</div>

<!-- start EDIt purchasesdetails -->
<div class="modal fade" id="Purchasedetails-edit" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-10" id="exampleModalLabel">Edit Purchase Detail</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post">
                    <div class="">
                        <div class="main-user-info">
                            <div class="row1">
                                <div class="user-input-box">
                                    <label style="color: black;">Id:</label>
                                    <input type="text" name="Id" value="0" readonly/>
                                </div>
                                <div class="user-input-box">
                                    <label style="color: black;">Purchase Id:</label>
                                    <select required name="PurchaseId">
                                        @foreach (var item in purchasesId)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    </select>
                                </div>
                                <div class="user-input-box">
                                    <label style="color: black;">Item:</label>
                                    <input type="text" name="Item" required />
                                </div>
                            </div>
                            <div class="row2">
                                <div class="user-input-box">
                                    <label style="color: black;">Quantity:</label>
                                    <input type="number" min="0" step="0.01" name="Quantity" required />
                                </div>
                                <div class="user-input-box">
                                    <label style="color: black;">Price:</label>
                                    <input type="number" min="0" name="Price" required />
                                </div>
                            </div>
                            <div class="row3">
                                <div class="user-input-box">
                                    <label style="color: black;">Details:</label>
                                    <input type="text" name="Details" value="-1"/>
                                </div>
                                <div class="user-input-box">
                                    <label style="color: black;">Rented Status:</label>
                                    <select name="IsRented" required>
                                        <option value="True">Yes</option>
                                        <option value="False">No</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="send"><input type="submit" value="Edit"></div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- end EDIt purchasesdetails -->

<script>
    function addHeader() {
        document.querySelector('#Purchasedetails-edit h1').textContent = "Add Purchase Detail";
        document.querySelector('#Purchasedetails-edit [type="submit"]').value = "Add";
    }

    function fillEditInfo(trId) {
        document.querySelector('#Purchasedetails-edit h1').textContent = "Edit Purchase Detail";
        document.querySelector('#Purchasedetails-edit [type="submit"]').value = "Edit";

        let cells = document.getElementById(trId).querySelectorAll('td');
        let data = {};

        cells.forEach(cell => {
            let key = cell.getAttribute('data-key');
            if (key !== 'none') {
                data[key] = cell.textContent;
            }
        });

        document.querySelector('#Purchasedetails-edit [name="Id"]').value = data.Id;
        document.querySelector('#Purchasedetails-edit [name="PurchaseId"]').value = data.PurchaseId;
        document.querySelector('#Purchasedetails-edit [name="Item"]').value = data.Item;
        document.querySelector('#Purchasedetails-edit [name="Quantity"]').value = data.Quantity;
        document.querySelector('#Purchasedetails-edit [name="Price"]').value = data.Price;
        document.querySelector('#Purchasedetails-edit [name="Details"]').value = data.Details;
        document.querySelector('#Purchasedetails-edit [name="IsRented"]').value = data.IsRented;
    }

    function deleteRecord(trId) {
        let cells = document.getElementById(trId).querySelectorAll('td');
        let data = {};

        cells.forEach(cell => {
            let key = cell.getAttribute('data-key');
            if (key !== 'none') {
                data[key] = cell.textContent;
            }
        });
        data.key = "PurchaseDetail";

        fetch('/database/delete', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(response => response.text())
            .then(data => {
                if (data === 'true') {
                    location.reload();
                }
            });
    }

    document.querySelector('form').addEventListener('submit', event => {
        event.preventDefault();
        let form = document.querySelector('form');
        let formData = {};

        formData.Id = form.elements['Id'].value;
        formData.PurchaseId = form.elements['PurchaseId'].value;
        formData.Item = form.elements['Item'].value;
        formData.Quantity = form.elements['Quantity'].value;
        formData.Price = form.elements['Price'].value;
        formData.Details = form.elements['Details'].value;
        formData.IsRented = form.elements['IsRented'].value;
        formData.key = 'PurchaseDetail';

        let header = document.querySelector('#Purchasedetails-edit h1').textContent;
        let action;
        if (header === 'Add Purchase Detail') {
            action = 'add';
        } else {
            action = 'edit';
        }
        fetch(`/database/${action}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        }).then(response => response.text())
            .then(data => {
                if (data === 'true') {
                    location.reload();
                }
            });
    });
</script>