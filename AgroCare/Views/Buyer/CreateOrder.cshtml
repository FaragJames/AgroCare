@model ItemsOrderViewModel

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Market</title>
    <link rel="stylesheet" href="~/css/buyer/buyer-style.css">
</head>

<body class="">
    <div class="container">
        <header>
            <h1>Your Shopping Cart</h1>
            <div class="new">
                <a asp-action="ShowPendingOrders"><img src="~/images/buyer/bell.png" /></a>
                <div class="shopping">
                    <img src="~/images/buyer/cart.png">
                    <span class="quantity">0</span>
                </div>
            </div>
        </header>

        <div class="list">
            @foreach (var item in Model.ItemsDto)
            {
                <div class="item">
                    <img src="">
                    <div class="title">@item.Name</div>
                    <div class="price">@item.Price</div>
                    <button onclick="addToCard(@item.Id, '@(item.Name)', @(item.Price))">Add To Cart</button>
                </div>
            }
        </div>
    </div>

    <form id="myForm" class="card" method="post">
        <div class="card-header">
            <h1>Cart</h1>
        </div>
        <ul class="listCard">
            @if(Model.OrderDto != null)
            {
                <input value="@Model.OrderDto.Id" name="orderId" hidden/>
            }
        </ul>
        <div class="checkOut">
            <div class="total">0</div>
            <button class="Send" type="submit">Send</button>
            <div class="closeShopping">Close</div>
        </div>
    </form>

    <script>
        var listCards = [];
        function initializeCard(id, name, price, quantity, date, totalPrice) {
            var item = {
                name: name,
                price: price,
                quantity: quantity,
                date: date,
                totalPrice: totalPrice
            };
            listCards[id] = item;
        }
    </script>
    @if(Model.OrderDto != null)
    {
        foreach(var orderDetail in Model.OrderDto.OrderDetails)
        {
            <script>
                initializeCard(@orderDetail.Item.Id, '@orderDetail.Item.Name', @orderDetail.KiloPrice, @orderDetail.Kilos, '@orderDetail.DeliveryDate.ToString("yyyy-MM-dd")', parseFloat('@(orderDetail.KiloPrice * orderDetail.Kilos)'));
            </script>
        }
    }
    <script src="~/js/buyer/create_buyer_order.js"></script>
</body>

</html>